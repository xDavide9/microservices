<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.amigoscode</groupId>
        <artifactId>amigosservices</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>customer</artifactId>
    <packaging>jar</packaging>
<!--    packaging as jar and need the spring boot maven plugin-->
<!--    before packaging we need to make sure that every dependency is available in the local m2
        maven repository otherwise the process will fail
        1) for depedencies that you get online from maven central these are automatically installed in the
        local m2 repository
        2) for depedencies that you create yourself (like clients, amqp) these guys need to be manually
        installed in the local m2 repository by running maven install
        depedencies can then be published either on maven central or other repository hosting services like
        Nexus or Artifactory to share with other developers-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!--    plugin from parent jib allows to create images from java applications without having to write
            DOCKERFILE-->
    <profiles>
        <profile>
            <id>build-docker-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amigoscode</groupId>
            <artifactId>clients</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
<!--        https://spring.io/blog/2016/02/15/distributed-tracing-with-spring-cloud-sleuth-and-spring-cloud-zipkin
sleuth provides autoconfiguration for distributed tracing,
it will add a traceID which never changes for the request
and a spanID that changes depending on which service the
request lands on. This information is added to every log
and I can see it in the console because I added logging
in every controller. This information can also be
fed to software like zipkin that is also autoconfigured
thanks to the spring-cloud-sleuth-zipkin dependency and
just need to specify host in the properties-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amigoscode</groupId>
            <artifactId>amqp</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

</project>